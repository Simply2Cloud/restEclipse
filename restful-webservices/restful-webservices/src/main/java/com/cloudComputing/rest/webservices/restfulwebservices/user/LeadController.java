package com.cloudComputing.rest.webservices.restfulwebservices.user;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cloudComputing.rest.webservices.restfulwebservices.user.Lead;
import com.cloudComputing.rest.webservices.restfulwebservices.user.LeadRep;
@Configuration
@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
@ComponentScan(basePackages = "com.cloudComputing.rest.webservices.restfulwebservices.user.LeadController")
public class LeadController {
	@Autowired // This means to get the bean called LeadRep
	           // Which is auto-generated by Spring, we will use it to handle the data
	private LeadRep leadRepository;
	
	@GetMapping(path="/add/{id}") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@PathVariable  int id
			/*Integer phone,
	 String name
	 String email,
	 String profession,
	 String leadType,
	 String leadSource,
	 String leadDate,
	 String leadTime,
	 String leadStatus,
	 String comments,
	 String refName*/) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Lead n = new Lead(1);
		n.setId(id);
		n.setPhone(001001001);
		n.setName("test");
		n.setEmail("test");
		n.setProfession("test");
		n.setLeadDate("test");
		n.setLeadSource("test");
		n.setLeadStatus("test");
		n.setLeadTime("test");
		n.setLeadType("test");
		n.setComments("test");
		n.setRefName("test");
		leadRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Lead> getAllUsers() {
		// This returns a JSON or XML with the users
		return leadRepository.findAll();
	}
}